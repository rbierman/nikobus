

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Sep 19 02:00:33 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 1.44
    21                           ; Generated 14/09/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F690 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  0115                     	;# 
   116  0116                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011A                     	;# 
   120  011B                     	;# 
   121  011E                     	;# 
   122  011F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  019D                     	;# 
   126  019E                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  008F                     	;# 
   166  0090                     	;# 
   167  0092                     	;# 
   168  0093                     	;# 
   169  0093                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0095                     	;# 
   173  0095                     	;# 
   174  0096                     	;# 
   175  0096                     	;# 
   176  0097                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009A                     	;# 
   180  009B                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  0115                     	;# 
   189  0116                     	;# 
   190  0118                     	;# 
   191  0119                     	;# 
   192  011A                     	;# 
   193  011B                     	;# 
   194  011E                     	;# 
   195  011F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198  019D                     	;# 
   199  019E                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000D                     	;# 
   212  000E                     	;# 
   213  000E                     	;# 
   214  000F                     	;# 
   215  0010                     	;# 
   216  0011                     	;# 
   217  0012                     	;# 
   218  0013                     	;# 
   219  0014                     	;# 
   220  0015                     	;# 
   221  0015                     	;# 
   222  0016                     	;# 
   223  0017                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  001A                     	;# 
   227  001C                     	;# 
   228  001D                     	;# 
   229  001E                     	;# 
   230  001F                     	;# 
   231  0081                     	;# 
   232  0085                     	;# 
   233  0086                     	;# 
   234  0087                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  008F                     	;# 
   239  0090                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0093                     	;# 
   243  0093                     	;# 
   244  0094                     	;# 
   245  0095                     	;# 
   246  0095                     	;# 
   247  0096                     	;# 
   248  0096                     	;# 
   249  0097                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009A                     	;# 
   253  009B                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  010C                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  0115                     	;# 
   262  0116                     	;# 
   263  0118                     	;# 
   264  0119                     	;# 
   265  011A                     	;# 
   266  011B                     	;# 
   267  011E                     	;# 
   268  011F                     	;# 
   269  018C                     	;# 
   270  018D                     	;# 
   271  019D                     	;# 
   272  019E                     	;# 
   273  0000                     	;# 
   274  0001                     	;# 
   275  0002                     	;# 
   276  0003                     	;# 
   277  0004                     	;# 
   278  0005                     	;# 
   279  0006                     	;# 
   280  0007                     	;# 
   281  000A                     	;# 
   282  000B                     	;# 
   283  000C                     	;# 
   284  000D                     	;# 
   285  000E                     	;# 
   286  000E                     	;# 
   287  000F                     	;# 
   288  0010                     	;# 
   289  0011                     	;# 
   290  0012                     	;# 
   291  0013                     	;# 
   292  0014                     	;# 
   293  0015                     	;# 
   294  0015                     	;# 
   295  0016                     	;# 
   296  0017                     	;# 
   297  0018                     	;# 
   298  0019                     	;# 
   299  001A                     	;# 
   300  001C                     	;# 
   301  001D                     	;# 
   302  001E                     	;# 
   303  001F                     	;# 
   304  0081                     	;# 
   305  0085                     	;# 
   306  0086                     	;# 
   307  0087                     	;# 
   308  008C                     	;# 
   309  008D                     	;# 
   310  008E                     	;# 
   311  008F                     	;# 
   312  0090                     	;# 
   313  0092                     	;# 
   314  0093                     	;# 
   315  0093                     	;# 
   316  0093                     	;# 
   317  0094                     	;# 
   318  0095                     	;# 
   319  0095                     	;# 
   320  0096                     	;# 
   321  0096                     	;# 
   322  0097                     	;# 
   323  0098                     	;# 
   324  0099                     	;# 
   325  009A                     	;# 
   326  009B                     	;# 
   327  009E                     	;# 
   328  009F                     	;# 
   329  010C                     	;# 
   330  010C                     	;# 
   331  010D                     	;# 
   332  010E                     	;# 
   333  010F                     	;# 
   334  0115                     	;# 
   335  0116                     	;# 
   336  0118                     	;# 
   337  0119                     	;# 
   338  011A                     	;# 
   339  011B                     	;# 
   340  011E                     	;# 
   341  011F                     	;# 
   342  018C                     	;# 
   343  018D                     	;# 
   344  019D                     	;# 
   345  019E                     	;# 
   346                           
   347                           	psect	strings
   348  0100                     __pstrings:	
   349  0100                     stringtab:	
   350  0100                     __stringtab:	
   351                           
   352                           ;	String table - string pointers are 1 byte each
   353  0100  1BFF               	btfsc	btemp+1,7
   354  0101  290A               	ljmp	stringcode
   355  0102  1383               	bcf	3,7
   356  0103  187F               	btfsc	btemp+1,0
   357  0104  1783               	bsf	3,7
   358  0105  0800               	movf	0,w
   359  0106  0A84               	incf	4,f
   360  0107  1903               	skipnz
   361  0108  0AFF               	incf	btemp+1,f
   362  0109  0008               	return
   363  010A                     stringcode:	
   364  010A                     stringdir:	
   365  010A  3001               	movlw	high stringdir
   366  010B  008A               	movwf	10
   367  010C  0804               	movf	4,w
   368  010D  0A84               	incf	4,f
   369  010E  0782               	addwf	2,f
   370  010F                     __stringbase:	
   371  010F  3400               	retlw	0
   372  0110                     __end_of__stringtab:	
   373  0110                     _hexpowers:	
   374  0110  3401               	retlw	1
   375  0111  3400               	retlw	0
   376  0112  3410               	retlw	16
   377  0113  3400               	retlw	0
   378  0114  3400               	retlw	0
   379  0115  3401               	retlw	1
   380  0116  3400               	retlw	0
   381  0117  3410               	retlw	16
   382  0118                     __end_of_hexpowers:	
   383  0012                     _T2CON	set	18
   384  000E                     _TMR1L	set	14
   385  000F                     _TMR1H	set	15
   386  0010                     _T1CONbits	set	16
   387  0007                     _PORTC	set	7
   388  0006                     _PORTB	set	6
   389  0005                     _PORTA	set	5
   390  001F                     _ADCON0bits	set	31
   391  0005                     _PORTAbits	set	5
   392  0001                     _TMR0	set	1
   393  0019                     _TXREG	set	25
   394  000B                     _INTCONbits	set	11
   395  0006                     _PORTBbits	set	6
   396  00C7                     _SPEN	set	199
   397  008C                     _PIE1bits	set	140
   398  0096                     _IOCAbits	set	150
   399  0099                     _SPBRG	set	153
   400  009A                     _SPBRGH	set	154
   401  0092                     _PR2	set	146
   402  0095                     _WPUAbits	set	149
   403  0081                     _OPTION_REGbits	set	129
   404  0087                     _TRISC	set	135
   405  0086                     _TRISB	set	134
   406  0085                     _TRISA	set	133
   407  008F                     _OSCCONbits	set	143
   408  04C5                     _TXEN	set	1221
   409  04C4                     _SYNC	set	1220
   410  04DB                     _BRG16	set	1243
   411  04C2                     _BRGH	set	1218
   412  04C1                     _TRMT	set	1217
   413  011A                     _CM2CON0	set	282
   414  0119                     _CM1CON0	set	281
   415  011F                     _ANSELH	set	287
   416  011E                     _ANSEL	set	286
   417  0118                     STR_6:	
   418  0118  3430               	retlw	48	;'0'
   419  0119  3431               	retlw	49	;'1'
   420  011A  3432               	retlw	50	;'2'
   421  011B  3433               	retlw	51	;'3'
   422  011C  3434               	retlw	52	;'4'
   423  011D  3435               	retlw	53	;'5'
   424  011E  3436               	retlw	54	;'6'
   425  011F  3437               	retlw	55	;'7'
   426  0120  3438               	retlw	56	;'8'
   427  0121  3439               	retlw	57	;'9'
   428  0122  3441               	retlw	65	;'A'
   429  0123  3442               	retlw	66	;'B'
   430  0124  3443               	retlw	67	;'C'
   431  0125  3444               	retlw	68	;'D'
   432  0126  3445               	retlw	69	;'E'
   433  0127  3446               	retlw	70	;'F'
   434  0128  3400               	retlw	0
   435  0129                     STR_1:	
   436  0129  3425               	retlw	37	;'%'
   437  012A  3430               	retlw	48	;'0'
   438  012B  3432               	retlw	50	;'2'
   439  012C  3458               	retlw	88	;'X'
   440  012D  343B               	retlw	59	;';'
   441  012E  3425               	retlw	37	;'%'
   442  012F  3430               	retlw	48	;'0'
   443  0130  3432               	retlw	50	;'2'
   444  0131  3458               	retlw	88	;'X'
   445  0132  343B               	retlw	59	;';'
   446  0133  3425               	retlw	37	;'%'
   447  0134  3430               	retlw	48	;'0'
   448  0135  3432               	retlw	50	;'2'
   449  0136  3458               	retlw	88	;'X'
   450  0137  340D               	retlw	13
   451  0138  340A               	retlw	10
   452  0139  3400               	retlw	0
   453  013A                     STR_3:	
   454  013A  3431               	retlw	49	;'1'
   455  013B  3400               	retlw	0
   456  013C                     STR_4:	
   457  013C  3432               	retlw	50	;'2'
   458  013D  3400               	retlw	0
   459  013E                     STR_5:	
   460  013E  3433               	retlw	51	;'3'
   461  013F  3400               	retlw	0
   462  0140                     STR_2:	
   463  0140  3452               	retlw	82	;'R'
   464  0141  3400               	retlw	0
   465                           
   466                           ; #config settings
   467  0000                     
   468                           	psect	cinit
   469  0013                     start_initialization:	
   470  0013                     __initialization:	
   471                           
   472                           ; Clear objects allocated to COMMON
   473  0013  01FA               	clrf	__pbssCOMMON& (0+127)
   474  0014  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   475                           
   476                           ; Clear objects allocated to BANK0
   477  0015  1283               	bcf	3,5	;RP0=0, select bank0
   478  0016  1303               	bcf	3,6	;RP1=0, select bank0
   479  0017  01A0               	clrf	__pbssBANK0& (0+127)
   480  0018  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   481  0019  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   482  001A  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   483  001B  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   484  001C  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   485  001D                     end_of_initialization:	
   486                           ;End of C runtime variable initialization code
   487                           
   488  001D                     __end_of__initialization:	
   489  001D  0183               	clrf	3
   490  001E  118A  296C         	ljmp	_main	;jump to C main() function
   491                           
   492                           	psect	bssEEDATA
   493  0000                     __pbssEEDATA:	
   494  0000                     _config:	
   495  0000  0000               	db	0
   496  0001  0000               	db	0
   497  0002  0000               	db	0
   498  0003  0000               	db	0
   499                           
   500                           	psect	bssCOMMON
   501  007A                     __pbssCOMMON:	
   502  007A                     _dataBlock:	
   503  007A                     	ds	1
   504  007B                     _bitsReceived:	
   505  007B                     	ds	1
   506                           
   507                           	psect	bssBANK0
   508  0020                     __pbssBANK0:	
   509  0020                     _busBuffer:	
   510  0020                     	ds	3
   511  0023                     _busMessage:	
   512  0023                     	ds	3
   513                           
   514                           	psect	cstackCOMMON
   515  0071                     __pcstackCOMMON:	
   516  0071                     ?_ConfigureOscillator:	
   517  0071                     ?_InitApp:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0071                     ?_sendSerial:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0071                     ?_main:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0071                     ?_resetBuffer:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0071                     ??_resetBuffer:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0071                     ?_isr:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0071                     sendSerial@text:	
   536                           ; 1 bytes @ 0x0
   537                           
   538                           
   539                           ; 2 bytes @ 0x0
   540  0071                     	ds	2
   541  0073                     ??_sendSerial:	
   542  0073                     ??_isr:	
   543                           ; 1 bytes @ 0x2
   544                           
   545                           
   546                           ; 1 bytes @ 0x2
   547  0073                     	ds	6
   548  0079                     isr@timer:	
   549                           
   550                           ; 1 bytes @ 0x8
   551  0079                     	ds	1
   552                           
   553                           	psect	cstackBANK0
   554  0000                     __pcstackBANK0:	
   555  0000                     ??_ConfigureOscillator:	
   556  0000                     ??_InitApp:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0000                     ??_main:	
   560                           ; 1 bytes @ 0x0
   561                           
   562                           
   563                           	psect	maintext
   564  016C                     __pmaintext:	
   565                           ; 1 bytes @ 0x0
   566 ;;
   567 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   568 ;;
   569 ;; *************** function _main *****************
   570 ;; Defined at:
   571 ;;		line 117 in file "main.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, status,2, status,0, pclath, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : B00/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   585 ;;      Params:         0       0       0       0
   586 ;;      Locals:         0       0       0       0
   587 ;;      Temps:          0       0       0       0
   588 ;;      Totals:         0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels required when called:    4
   591 ;; This function calls:
   592 ;;		_ConfigureOscillator
   593 ;;		_InitApp
   594 ;; This function is called by:
   595 ;;		Startup code after reset
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           
   600                           ;psect for function _main
   601  016C                     _main:	
   602                           
   603                           ;main.c: 119: ConfigureOscillator();
   604                           
   605                           ;incstack = 0
   606                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   607  016C  118A  2173  118A   	fcall	_ConfigureOscillator
   608                           
   609                           ;main.c: 122: InitApp();
   610  016F  118A  20B1  118A   	fcall	_InitApp
   611  0172                     l66:	
   612                           ;main.c: 124: while (1) {
   613                           
   614  0172  2972               	goto	l66
   615  0173                     __end_of_main:	
   616                           
   617                           	psect	text1
   618  00B1                     __ptext1:	
   619 ;; *************** function _InitApp *****************
   620 ;; Defined at:
   621 ;;		line 21 in file "user.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   635 ;;      Params:         0       0       0       0
   636 ;;      Locals:         0       0       0       0
   637 ;;      Temps:          0       0       0       0
   638 ;;      Totals:         0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    3
   642 ;; This function calls:
   643 ;;		Nothing
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           
   650                           ;psect for function _InitApp
   651  00B1                     _InitApp:	
   652                           
   653                           ;user.c: 23: ANSEL = 0b00000100;
   654                           
   655                           ;incstack = 0
   656                           ; Regs used in _InitApp: [wreg+status,2+status,0]
   657  00B1  3004               	movlw	4
   658  00B2  1283               	bcf	3,5	;RP0=0, select bank2
   659  00B3  1703               	bsf	3,6	;RP1=1, select bank2
   660  00B4  009E               	movwf	30	;volatile
   661                           
   662                           ;user.c: 24: ANSELH = 0;
   663  00B5  019F               	clrf	31	;volatile
   664                           
   665                           ;user.c: 25: ADCON0bits.CHS = 0b0010;
   666  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   667  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   668  00B8  081F               	movf	31,w	;volatile
   669  00B9  39C3               	andlw	-61
   670  00BA  3808               	iorlw	8
   671  00BB  009F               	movwf	31	;volatile
   672                           
   673                           ;user.c: 26: ADCON0bits.ADFM = 0;
   674  00BC  139F               	bcf	31,7	;volatile
   675                           
   676                           ;user.c: 27: ADCON0bits.ADON = 1;
   677  00BD  141F               	bsf	31,0	;volatile
   678                           
   679                           ;user.c: 29: CM1CON0 = 0;
   680  00BE  1283               	bcf	3,5	;RP0=0, select bank2
   681  00BF  1703               	bsf	3,6	;RP1=1, select bank2
   682  00C0  0199               	clrf	25	;volatile
   683                           
   684                           ;user.c: 30: CM2CON0 = 0;
   685  00C1  019A               	clrf	26	;volatile
   686                           
   687                           ;user.c: 32: TRISA = 0b00111111;
   688  00C2  303F               	movlw	63
   689  00C3  1683               	bsf	3,5	;RP0=1, select bank1
   690  00C4  1303               	bcf	3,6	;RP1=0, select bank1
   691  00C5  0085               	movwf	5	;volatile
   692                           
   693                           ;user.c: 33: TRISB = 0;
   694  00C6  0186               	clrf	6	;volatile
   695                           
   696                           ;user.c: 34: TRISC = 0;
   697  00C7  0187               	clrf	7	;volatile
   698                           
   699                           ;user.c: 36: PORTA = 0x00;
   700  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   701  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   702  00CA  0185               	clrf	5	;volatile
   703                           
   704                           ;user.c: 37: PORTB = 0x00;
   705  00CB  0186               	clrf	6	;volatile
   706                           
   707                           ;user.c: 38: PORTC = 0x00;
   708  00CC  0187               	clrf	7	;volatile
   709                           
   710                           ;user.c: 41: OPTION_REGbits.nRABPU = 0;
   711  00CD  1683               	bsf	3,5	;RP0=1, select bank1
   712  00CE  1303               	bcf	3,6	;RP1=0, select bank1
   713  00CF  1381               	bcf	1,7	;volatile
   714                           
   715                           ;user.c: 42: WPUAbits.WPUA4 = 1;
   716  00D0  1615               	bsf	21,4	;volatile
   717                           
   718                           ;user.c: 43: WPUAbits.WPUA5 = 1;
   719  00D1  1695               	bsf	21,5	;volatile
   720                           
   721                           ;user.c: 50: OPTION_REGbits.T0CS = 0;
   722  00D2  1281               	bcf	1,5	;volatile
   723                           
   724                           ;user.c: 51: OPTION_REGbits.T0SE = 0;
   725  00D3  1201               	bcf	1,4	;volatile
   726                           
   727                           ;user.c: 52: OPTION_REGbits.PSA = 0;
   728  00D4  1181               	bcf	1,3	;volatile
   729                           
   730                           ;user.c: 53: OPTION_REGbits.PS2 = 1;
   731  00D5  1501               	bsf	1,2	;volatile
   732                           
   733                           ;user.c: 54: OPTION_REGbits.PS1 = 0;
   734  00D6  1081               	bcf	1,1	;volatile
   735                           
   736                           ;user.c: 55: OPTION_REGbits.PS0 = 0;
   737  00D7  1001               	bcf	1,0	;volatile
   738                           
   739                           ;user.c: 59: T1CONbits.T1CKPS1 = 0;
   740  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   741  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   742  00DA  1290               	bcf	16,5	;volatile
   743                           
   744                           ;user.c: 60: T1CONbits.T1CKPS0 = 1;
   745  00DB  1610               	bsf	16,4	;volatile
   746                           
   747                           ;user.c: 61: T1CONbits.T1OSCEN = 0;
   748  00DC  1190               	bcf	16,3	;volatile
   749                           
   750                           ;user.c: 62: T1CONbits.nT1SYNC = 1;
   751  00DD  1510               	bsf	16,2	;volatile
   752                           
   753                           ;user.c: 63: T1CONbits.TMR1CS = 0;
   754  00DE  1090               	bcf	16,1	;volatile
   755                           
   756                           ;user.c: 64: T1CONbits.TMR1ON = 1;
   757  00DF  1410               	bsf	16,0	;volatile
   758                           
   759                           ;user.c: 65: TMR1H = 0x3C;
   760  00E0  303C               	movlw	60
   761  00E1  008F               	movwf	15	;volatile
   762                           
   763                           ;user.c: 66: TMR1L = 0xB0;
   764  00E2  30B0               	movlw	176
   765  00E3  008E               	movwf	14	;volatile
   766                           
   767                           ;user.c: 78: T2CON = 0b00011101;
   768  00E4  301D               	movlw	29
   769  00E5  0092               	movwf	18	;volatile
   770                           
   771                           ;user.c: 79: PR2 = 63;
   772  00E6  303F               	movlw	63
   773  00E7  1683               	bsf	3,5	;RP0=1, select bank1
   774  00E8  1303               	bcf	3,6	;RP1=0, select bank1
   775  00E9  0092               	movwf	18	;volatile
   776                           
   777                           ;user.c: 83: SPBRGH = 0;
   778  00EA  019A               	clrf	26	;volatile
   779                           
   780                           ;user.c: 84: SPBRG = 12;
   781  00EB  300C               	movlw	12
   782  00EC  0099               	movwf	25	;volatile
   783                           
   784                           ;user.c: 86: BRGH = 0;
   785  00ED  1118               	bcf	24,2	;volatile
   786                           
   787                           ;user.c: 87: BRG16 = 0;
   788  00EE  119B               	bcf	27,3	;volatile
   789                           
   790                           ;user.c: 89: SYNC = 0;
   791  00EF  1218               	bcf	24,4	;volatile
   792                           
   793                           ;user.c: 90: SPEN = 1;
   794  00F0  1283               	bcf	3,5	;RP0=0, select bank0
   795  00F1  1303               	bcf	3,6	;RP1=0, select bank0
   796  00F2  1798               	bsf	24,7	;volatile
   797                           
   798                           ;user.c: 93: TXEN = 1;
   799  00F3  1683               	bsf	3,5	;RP0=1, select bank1
   800  00F4  1303               	bcf	3,6	;RP1=0, select bank1
   801  00F5  1698               	bsf	24,5	;volatile
   802                           
   803                           ;user.c: 97: INTCONbits.GIE = 1;
   804  00F6  178B               	bsf	11,7	;volatile
   805                           
   806                           ;user.c: 99: INTCONbits.PEIE = 1;
   807  00F7  170B               	bsf	11,6	;volatile
   808                           
   809                           ;user.c: 102: INTCONbits.RABIE = 1;
   810  00F8  158B               	bsf	11,3	;volatile
   811                           
   812                           ;user.c: 107: INTCONbits.RABIF = 0;
   813  00F9  100B               	bcf	11,0	;volatile
   814                           
   815                           ;user.c: 109: IOCAbits.IOCA0 = 1;
   816  00FA  1416               	bsf	22,0	;volatile
   817                           
   818                           ;user.c: 110: PIE1bits.TMR1IE = 0;
   819  00FB  100C               	bcf	12,0	;volatile
   820                           
   821                           ;user.c: 111: PIE1bits.T2IE = 0;
   822  00FC  108C               	bcf	12,1	;volatile
   823                           
   824                           ;user.c: 112: PIE1bits.ADIE = 0;
   825  00FD  130C               	bcf	12,6	;volatile
   826  00FE  0008               	return
   827  00FF                     __end_of_InitApp:	
   828                           
   829                           	psect	text2
   830  0173                     __ptext2:	
   831 ;; *************** function _ConfigureOscillator *****************
   832 ;; Defined at:
   833 ;;		line 15 in file "system.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   847 ;;      Params:         0       0       0       0
   848 ;;      Locals:         0       0       0       0
   849 ;;      Temps:          0       0       0       0
   850 ;;      Totals:         0       0       0       0
   851 ;;Total ram usage:        0 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; Hardware stack levels required when called:    3
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_main
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           
   862                           ;psect for function _ConfigureOscillator
   863  0173                     _ConfigureOscillator:	
   864                           
   865                           ;system.c: 18: OSCCONbits.IRCF = 0b111;
   866                           
   867                           ;incstack = 0
   868                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
   869  0173  3070               	movlw	112
   870  0174  1683               	bsf	3,5	;RP0=1, select bank1
   871  0175  1303               	bcf	3,6	;RP1=0, select bank1
   872  0176  048F               	iorwf	15,f	;volatile
   873  0177  0008               	return
   874  0178                     __end_of_ConfigureOscillator:	
   875                           
   876                           	psect	text3
   877  0020                     __ptext3:	
   878 ;; *************** function _isr *****************
   879 ;; Defined at:
   880 ;;		line 139 in file "main.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;  timer           1    8[COMMON] unsigned char 
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   894 ;;      Params:         0       0       0       0
   895 ;;      Locals:         1       0       0       0
   896 ;;      Temps:          6       0       0       0
   897 ;;      Totals:         7       0       0       0
   898 ;;Total ram usage:        7 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    2
   901 ;; This function calls:
   902 ;;		_resetBuffer
   903 ;;		_sendSerial
   904 ;; This function is called by:
   905 ;;		Interrupt level 1
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _isr
   911  0020                     _isr:	
   912                           
   913                           ;main.c: 140: unsigned char timer = TMR0;
   914  0020  0801               	movf	1,w	;volatile
   915  0021  00F3               	movwf	??_isr
   916  0022  0873               	movf	??_isr,w
   917  0023  00F9               	movwf	isr@timer
   918                           
   919                           ;main.c: 142: if (INTCONbits.T0IF) {
   920  0024  1D0B               	btfss	11,2	;volatile
   921  0025  2836               	goto	i1l1223
   922                           
   923                           ;main.c: 143: sendSerial("R");
   924  0026  3031               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   925  0027  00F1               	movwf	sendSerial@text
   926  0028  3080               	movlw	128
   927  0029  00F2               	movwf	sendSerial@text+1
   928  002A  118A  2142  118A   	fcall	_sendSerial
   929                           
   930                           ;main.c: 145: resetBuffer();
   931  002D  118A  2161  118A   	fcall	_resetBuffer
   932                           
   933                           ;main.c: 149: INTCONbits.T0IF = 0;
   934  0030  110B               	bcf	11,2	;volatile
   935                           
   936                           ;main.c: 150: INTCONbits.T0IE = 0;
   937  0031  128B               	bcf	11,5	;volatile
   938                           
   939                           ;main.c: 151: TMR0 = 87;
   940  0032  3057               	movlw	87
   941  0033  1283               	bcf	3,5	;RP0=0, select bank0
   942  0034  1303               	bcf	3,6	;RP1=0, select bank0
   943  0035  0081               	movwf	1	;volatile
   944  0036                     i1l1223:	
   945                           
   946                           ;main.c: 152: }
   947                           ;main.c: 154: if (INTCONbits.RABIF == 1) {
   948  0036  1C0B               	btfss	11,0	;volatile
   949  0037  28A4               	goto	i1l89
   950                           
   951                           ;main.c: 156: if (PORTAbits.RA0 == 1) {
   952  0038  1C05               	btfss	5,0	;volatile
   953  0039  28A2               	goto	i1l1271
   954                           
   955                           ;main.c: 158: TMR0 = 87;
   956  003A  3057               	movlw	87
   957  003B  0081               	movwf	1	;volatile
   958                           
   959                           ;main.c: 159: if (bitsReceived == 9) {
   960  003C  3009               	movlw	9
   961  003D  067B               	xorwf	_bitsReceived,w
   962  003E  1D03               	btfss	3,2
   963  003F  2843               	goto	i1l1233
   964                           
   965                           ;main.c: 160: dataBlock = 1;
   966  0040  01FA               	clrf	_dataBlock
   967  0041  0AFA               	incf	_dataBlock,f
   968                           
   969                           ;main.c: 161: } else if (bitsReceived == 17) {
   970  0042  2847               	goto	i1l1237
   971  0043                     i1l1233:	
   972  0043  3011               	movlw	17
   973  0044  067B               	xorwf	_bitsReceived,w
   974  0045  1903               	btfsc	3,2
   975                           
   976                           ;main.c: 162: dataBlock = 0;
   977  0046  01FA               	clrf	_dataBlock
   978  0047                     i1l1237:	
   979                           
   980                           ;main.c: 163: }
   981                           ;main.c: 165: sendSerial("1");
   982  0047  302B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   983  0048  00F1               	movwf	sendSerial@text
   984  0049  3080               	movlw	128
   985  004A  00F2               	movwf	sendSerial@text+1
   986  004B  118A  2142  118A   	fcall	_sendSerial
   987                           
   988                           ;main.c: 167: if (bitsReceived >= 1) {
   989  004E  087B               	movf	_bitsReceived,w
   990  004F  1903               	btfsc	3,2
   991  0050  289E               	goto	i1l1269
   992                           
   993                           ;main.c: 168: sendSerial("2");
   994  0051  302D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   995  0052  00F1               	movwf	sendSerial@text
   996  0053  3080               	movlw	128
   997  0054  00F2               	movwf	sendSerial@text+1
   998  0055  118A  2142  118A   	fcall	_sendSerial
   999                           
  1000                           ;main.c: 170: busBuffer.rawData[dataBlock] = busBuffer.rawData[dataBlock] >> 1;
  1001  0058  087A               	movf	_dataBlock,w
  1002  0059  3E20               	addlw	(low (_busBuffer| 0))& (0+255)
  1003  005A  0084               	movwf	4
  1004  005B  1383               	bcf	3,7	;select IRP bank0
  1005  005C  0800               	movf	0,w
  1006  005D  00F3               	movwf	??_isr
  1007  005E  1003               	clrc
  1008  005F  0C73               	rrf	??_isr,w
  1009  0060  00F4               	movwf	??_isr+1
  1010  0061  087A               	movf	_dataBlock,w
  1011  0062  3E20               	addlw	(low (_busBuffer| 0))& (0+255)
  1012  0063  0084               	movwf	4
  1013  0064  0874               	movf	??_isr+1,w
  1014  0065  0080               	movwf	0
  1015                           
  1016                           ;main.c: 172: if ((timer > 149) && (timer < 193)) {
  1017  0066  3096               	movlw	150
  1018  0067  0279               	subwf	isr@timer,w
  1019  0068  1C03               	skipc
  1020  0069  286E               	goto	i1l1251
  1021  006A  30C1               	movlw	193
  1022  006B  0279               	subwf	isr@timer,w
  1023  006C  1C03               	btfss	3,0
  1024  006D  2885               	goto	i1l1259
  1025  006E                     i1l1251:	
  1026                           ;main.c: 174: } else if ((timer > 118) && (timer < 149)) {
  1027                           
  1028  006E  3077               	movlw	119
  1029  006F  0279               	subwf	isr@timer,w
  1030  0070  1C03               	skipc
  1031  0071  2882               	goto	i1l1257
  1032  0072  3095               	movlw	149
  1033  0073  0279               	subwf	isr@timer,w
  1034  0074  1803               	skipnc
  1035  0075  2882               	goto	i1l1257
  1036                           
  1037                           ;main.c: 176: busBuffer.rawData[dataBlock] = busBuffer.rawData[dataBlock] | 0b10000000;
  1038  0076  087A               	movf	_dataBlock,w
  1039  0077  3E20               	addlw	(low (_busBuffer| 0))& (0+255)
  1040  0078  0084               	movwf	4
  1041  0079  0800               	movf	0,w
  1042  007A  3880               	iorlw	128
  1043  007B  00F3               	movwf	??_isr
  1044  007C  087A               	movf	_dataBlock,w
  1045  007D  3E20               	addlw	(low (_busBuffer| 0))& (0+255)
  1046  007E  0084               	movwf	4
  1047  007F  0873               	movf	??_isr,w
  1048  0080  0080               	movwf	0
  1049                           
  1050                           ;main.c: 177: } else {
  1051  0081  2885               	goto	i1l1259
  1052  0082                     i1l1257:	
  1053                           
  1054                           ;main.c: 178: resetBuffer();
  1055  0082  118A  2161  118A   	fcall	_resetBuffer
  1056  0085                     i1l1259:	
  1057                           
  1058                           ;main.c: 179: }
  1059                           ;main.c: 181: if (bitsReceived == 24) {
  1060  0085  3018               	movlw	24
  1061  0086  067B               	xorwf	_bitsReceived,w
  1062  0087  1D03               	btfss	3,2
  1063  0088  289E               	goto	i1l1269
  1064                           
  1065                           ;main.c: 182: sendSerial("3");
  1066  0089  302F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1067  008A  00F1               	movwf	sendSerial@text
  1068  008B  3080               	movlw	128
  1069  008C  00F2               	movwf	sendSerial@text+1
  1070  008D  118A  2142  118A   	fcall	_sendSerial
  1071                           
  1072                           ;main.c: 183: busMessage.rawData[0] = busBuffer.rawData[0];
  1073  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0092  0820               	movf	_busBuffer,w
  1076  0093  00F3               	movwf	??_isr
  1077  0094  0873               	movf	??_isr,w
  1078  0095  00A3               	movwf	_busMessage
  1079                           
  1080                           ;main.c: 184: busMessage.rawData[1] = busBuffer.rawData[1];
  1081  0096  0821               	movf	_busBuffer+1,w
  1082  0097  00F3               	movwf	??_isr
  1083  0098  0873               	movf	??_isr,w
  1084  0099  00A4               	movwf	_busMessage+1
  1085                           
  1086                           ;main.c: 185: busMessage.rawData[2] = busBuffer.rawData[2];
  1087  009A  0822               	movf	_busBuffer+2,w
  1088  009B  00F3               	movwf	??_isr
  1089  009C  0873               	movf	??_isr,w
  1090  009D  00A5               	movwf	_busMessage+2
  1091  009E                     i1l1269:	
  1092                           
  1093                           ;main.c: 186: }
  1094                           ;main.c: 187: }
  1095                           ;main.c: 189: bitsReceived++;
  1096  009E  3001               	movlw	1
  1097  009F  00F3               	movwf	??_isr
  1098  00A0  0873               	movf	??_isr,w
  1099  00A1  07FB               	addwf	_bitsReceived,f
  1100  00A2                     i1l1271:	
  1101                           
  1102                           ;main.c: 190: }
  1103                           ;main.c: 193: INTCONbits.RABIF = 0;
  1104  00A2  100B               	bcf	11,0	;volatile
  1105                           
  1106                           ;main.c: 196: INTCONbits.T0IE = 1;
  1107  00A3  168B               	bsf	11,5	;volatile
  1108  00A4                     i1l89:	
  1109  00A4  0878               	movf	??_isr+5,w
  1110  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1111  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1112  00A7  00FF               	movwf	127
  1113  00A8  0877               	movf	??_isr+4,w
  1114  00A9  008A               	movwf	10
  1115  00AA  0876               	movf	??_isr+3,w
  1116  00AB  0084               	movwf	4
  1117  00AC  0E75               	swapf	(??_isr+2)^(0+-128),w
  1118  00AD  0083               	movwf	3
  1119  00AE  0EFE               	swapf	126,f
  1120  00AF  0E7E               	swapf	126,w
  1121  00B0  0009               	retfie
  1122  00B1                     __end_of_isr:	
  1123                           
  1124                           	psect	intentry
  1125  0004                     __pintentry:	
  1126                           ;incstack = 0
  1127                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1128                           
  1129  0004                     interrupt_function:	
  1130  007E                     saved_w	set	btemp
  1131  0004  00FE               	movwf	btemp
  1132  0005  0E03               	swapf	3,w
  1133  0006  00F5               	movwf	??_isr+2
  1134  0007  0804               	movf	4,w
  1135  0008  00F6               	movwf	??_isr+3
  1136  0009  080A               	movf	10,w
  1137  000A  00F7               	movwf	??_isr+4
  1138  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1139  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1140  000D  087F               	movf	btemp+1,w
  1141  000E  00F8               	movwf	??_isr+5
  1142  000F  118A  2820         	ljmp	_isr
  1143                           
  1144                           	psect	text4
  1145  0142                     __ptext4:	
  1146 ;; *************** function _sendSerial *****************
  1147 ;; Defined at:
  1148 ;;		line 97 in file "main.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  text            2    0[COMMON] PTR const unsigned char 
  1151 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  1152 ;;		 -> sendSeriotData@text(18), 
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1164 ;;      Params:         2       0       0       0
  1165 ;;      Locals:         0       0       0       0
  1166 ;;      Temps:          0       0       0       0
  1167 ;;      Totals:         2       0       0       0
  1168 ;;Total ram usage:        2 bytes
  1169 ;; Hardware stack levels used:    2
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_isr
  1174 ;;		_sendSeriotData
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           
  1179                           ;psect for function _sendSerial
  1180  0142                     _sendSerial:	
  1181  0142                     i1l967:	
  1182                           ;main.c: 98: while (*text) {
  1183                           
  1184                           ;incstack = 0
  1185                           ; Regs used in _sendSerial: [wreg-fsr0h+btemp+1+pclath]
  1186                           
  1187  0142  0872               	movf	sendSerial@text+1,w
  1188  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0145  00FF               	movwf	127
  1191  0146  0871               	movf	sendSerial@text,w
  1192  0147  0084               	movwf	4
  1193  0148  118A  2100  118A   	fcall	stringtab
  1194  014B  3A00               	xorlw	0
  1195  014C  1903               	btfsc	3,2
  1196  014D  0008               	return
  1197                           
  1198                           ;main.c: 99: TXREG = *text;
  1199  014E  0872               	movf	sendSerial@text+1,w
  1200  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0151  00FF               	movwf	127
  1203  0152  0871               	movf	sendSerial@text,w
  1204  0153  0084               	movwf	4
  1205  0154  118A  2100  118A   	fcall	stringtab
  1206  0157  0099               	movwf	25	;volatile
  1207  0158                     i1l54:	
  1208                           ;main.c: 100: while (!TRMT);
  1209                           
  1210  0158  1683               	bsf	3,5	;RP0=1, select bank1
  1211  0159  1303               	bcf	3,6	;RP1=0, select bank1
  1212  015A  1C98               	btfss	24,1	;volatile
  1213  015B  2958               	goto	i1l54
  1214                           
  1215                           ;main.c: 101: *text++;
  1216  015C  3001               	movlw	1
  1217  015D  07F1               	addwf	sendSerial@text,f
  1218  015E  1803               	skipnc
  1219  015F  0AF2               	incf	sendSerial@text+1,f
  1220  0160  2942               	goto	i1l967
  1221  0161                     __end_of_sendSerial:	
  1222                           
  1223                           	psect	text5
  1224  0161                     __ptext5:	
  1225 ;; *************** function _resetBuffer *****************
  1226 ;; Defined at:
  1227 ;;		line 130 in file "main.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1241 ;;      Params:         0       0       0       0
  1242 ;;      Locals:         0       0       0       0
  1243 ;;      Temps:          1       0       0       0
  1244 ;;      Totals:         1       0       0       0
  1245 ;;Total ram usage:        1 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_isr
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           
  1255                           ;psect for function _resetBuffer
  1256  0161                     _resetBuffer:	
  1257                           
  1258                           ;main.c: 131: busBuffer.rawData[0] = 0;
  1259                           
  1260                           ;incstack = 0
  1261                           ; Regs used in _resetBuffer: [wreg+status,2]
  1262  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1263  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1264  0163  01A0               	clrf	_busBuffer
  1265                           
  1266                           ;main.c: 132: busBuffer.rawData[1] = 0;
  1267  0164  01A1               	clrf	_busBuffer+1
  1268                           
  1269                           ;main.c: 133: busBuffer.rawData[2] = 0;
  1270  0165  01A2               	clrf	_busBuffer+2
  1271                           
  1272                           ;main.c: 135: bitsReceived = 0;
  1273  0166  01FB               	clrf	_bitsReceived
  1274                           
  1275                           ;main.c: 136: dataBlock = 2;
  1276  0167  3002               	movlw	2
  1277  0168  00F1               	movwf	??_resetBuffer
  1278  0169  0871               	movf	??_resetBuffer,w
  1279  016A  00FA               	movwf	_dataBlock
  1280  016B  0008               	return
  1281  016C                     __end_of_resetBuffer:	
  1282  007E                     btemp	set	126	;btemp
  1283  007E                     wtemp0	set	126


Data Sizes:
    Strings     42
    Constant    8
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      9      11
    BANK0            80      0       6
    BANK1            80      0       0
    BANK2            69      0       0

Pointer List with Targets:

    sendSerial@text	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> sendSeriotData@text(BANK0[18]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_sendSerial

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  7     7      0     514
                                              2 COMMON     7     7      0
                        _resetBuffer
                         _sendSerial
 ---------------------------------------------------------------------------------
 (4) _sendSerial                                           2     0      2     425
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _resetBuffer                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp

 _isr (ROOT)
   _resetBuffer
   _sendSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       4       0        1.6%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      9       B       1       84.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       6       3        7.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      11       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            45      0       0       8        0.0%
BANK2               45      0       0       9        0.0%
DATA                 0      0      11      10        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Sep 19 02:00:33 2018

                           pc 0002                   __CFG_CP$OFF 0000                            l66 0172  
                          fsr 0004                           _PR2 0092                  __CFG_CPD$OFF 0000  
                         _isr 0020                           fsr0 0004                           indf 0000  
                        ?_isr 0071                          STR_1 0129                          STR_2 0140  
                        STR_3 013A                          STR_4 013C                          STR_5 013E  
                        STR_6 0118                          _BRGH 04C2                          i1l54 0158  
                        i1l89 00A4                          _TMR0 0001                          _SPEN 00C7  
                        _TRMT 04C1                          _TXEN 04C5                          _SYNC 04C4  
                        _main 016C                          btemp 007E                          start 0011  
               __CFG_IESO$OFF 0000               __end_of_InitApp 00FF                         ??_isr 0073  
                       ?_main 0071                         _BRG16 04DB                 __CFG_WDTE$OFF 0000  
                       _ANSEL 011E                         _T2CON 0012                         i1l967 0142  
                       _TMR1H 000F                         _TMR1L 000E                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TXREG 0019           _ConfigureOscillator 0173                __CFG_FCMEN$OFF 0000  
              __CFG_BOREN$OFF 0000                         pclath 000A                         status 0003  
                       wtemp0 007E          ?_ConfigureOscillator 0071                __CFG_MCLRE$OFF 0000  
             __initialization 0013                  __end_of_main 0173                        ??_main 0000  
                      _ANSELH 011F                        i1l1223 0036                        i1l1233 0043  
                      i1l1251 006E                        i1l1237 0047                        i1l1271 00A2  
                      i1l1257 0082                        i1l1259 0085                        i1l1269 009E  
                ?_resetBuffer 0071                        _SPBRGH 009A                     ??_InitApp 0000  
       ??_ConfigureOscillator 0000                __CFG_PWRTE$OFF 0000                        _config 0000  
                      saved_w 007E       __end_of__initialization 001D                __pcstackCOMMON 0071  
              _OPTION_REGbits 0081                    __pbssBANK0 0020                    __pmaintext 016C  
                  __pintentry 0004                       _CM1CON0 0119                       _CM2CON0 011A  
                  _busMessage 0023                    __stringtab 0100                  _bitsReceived 007B  
                     _InitApp 00B1          __size_of_resetBuffer 000B                       __ptext1 00B1  
                     __ptext2 0173                       __ptext3 0020                       __ptext4 0142  
                     __ptext5 0161             __end_of_hexpowers 0118                     _T1CONbits 0010  
                __size_of_isr 0091          end_of_initialization 001D                    _sendSerial 0142  
                   _PORTAbits 0005                     _PORTBbits 0006   __end_of_ConfigureOscillator 0178  
         start_initialization 0013                   __end_of_isr 00B1                   ?_sendSerial 0071  
                 __pbssEEDATA 0000                   __pbssCOMMON 007A                     ___latbits 0001  
               __pcstackBANK0 0000                     _dataBlock 007A                      ?_InitApp 0071  
                   _busBuffer 0020           __size_of_sendSerial 001F                     __pstrings 0100  
                   _hexpowers 0110                 ??_resetBuffer 0071             interrupt_function 0004  
                    _IOCAbits 0096                      _PIE1bits 008C                    _ADCON0bits 001F  
                 __stringbase 010F                      _WPUAbits 0095              __size_of_InitApp 004E  
         __end_of_resetBuffer 016C            __end_of__stringtab 0110                sendSerial@text 0071  
                ??_sendSerial 0073                 __size_of_main 0007  __size_of_ConfigureOscillator 0005  
          __end_of_sendSerial 0161                    _INTCONbits 000B                      isr@timer 0079  
                    intlevel1 0000                   _resetBuffer 0161                     stringcode 010A  
                  _OSCCONbits 008F                      stringdir 010A                      stringtab 0100  
           __CFG_FOSC$INTRCIO 0000  
