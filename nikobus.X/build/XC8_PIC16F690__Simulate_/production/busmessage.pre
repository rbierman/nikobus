
# 1 "busmessage.c"

# 13 "C:\Program Files (x86)\Microchip\xc8\v1.12\include\stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 28
typedef signed short long int int24_t;

# 36
typedef signed long int int32_t;

# 43
typedef unsigned char uint8_t;

# 49
typedef unsigned int uint16_t;

# 56
typedef unsigned short long int uint24_t;

# 63
typedef unsigned long int uint32_t;

# 71
typedef signed char int_least8_t;

# 78
typedef signed int int_least16_t;

# 90
typedef signed short long int int_least24_t;

# 98
typedef signed long int int_least32_t;

# 105
typedef unsigned char uint_least8_t;

# 111
typedef unsigned int uint_least16_t;

# 121
typedef unsigned short long int uint_least24_t;

# 128
typedef unsigned long int uint_least32_t;

# 137
typedef signed char int_fast8_t;

# 144
typedef signed int int_fast16_t;

# 156
typedef signed short long int int_fast24_t;

# 164
typedef signed long int int_fast32_t;

# 171
typedef unsigned char uint_fast8_t;

# 177
typedef unsigned int uint_fast16_t;

# 187
typedef unsigned short long int uint_fast24_t;

# 194
typedef unsigned long int uint_fast32_t;

# 200
typedef int32_t intmax_t;




typedef uint32_t uintmax_t;




typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 8 "C:\Program Files (x86)\Microchip\xc8\v1.12\include\stdio.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 7 "C:\Program Files (x86)\Microchip\xc8\v1.12\include\stdarg.h"
typedef void * va_list[1];

#pragma intrinsic(__va_start)
extern void * __va_start(void);

#pragma intrinsic(__va_arg)
extern void * __va_arg(void *, ...);

# 23 "C:\Program Files (x86)\Microchip\xc8\v1.12\include\stdio.h"
extern int errno;

# 54
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 17 "C:\Program Files (x86)\Microchip\xc8\v1.12\include\conio.h"
extern int errno;


extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern __bit kbhit(void);

# 31
extern char * cgets(char *);
extern void cputs(const char *);

# 99 "C:\Program Files (x86)\Microchip\xc8\v1.12\include\stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);


# 191
#pragma printf_check(vprintf) const
#pragma printf_check(vsprintf) const

extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...);
extern int sscanf(const char *, const char *, ...);
extern int vprintf(const char *, va_list);
extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
extern int vscanf(const char *, va_list ap);
extern int vsscanf(const char *, const char *, va_list);

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 12 "C:\Program Files (x86)\Microchip\xc8\v1.12\include\stdbool.h"
typedef unsigned char bool;

# 20 "system.h"
void ConfigureOscillator(void);

# 30 "lcd.h"
void init_lcd(void);
uint8_t busyXLCD(void);
void writeCmdXLCD(uint8_t cmd);
void putsXLCD(char *data);
void putrsXLCD(const char *buffer);
void putrsXLCDElement(const char *data, uint8_t element);
void writeDataXLCD(char data);
void setDDRamAddr(unsigned char DDaddr);
void clearLCD();

# 18 "main.h"
struct Awning {
uint8_t buttonAddress[3];
uint8_t buttonUp;
uint8_t buttonDown;

uint16_t upWindPeak;
uint16_t upWindAvg;
uint8_t upWindDelay;

uint8_t upZonAvg;
uint8_t upZonDelay;
uint8_t downWindAvg;
uint8_t downWindDelay;
uint8_t downZonAvg;
uint8_t downZonDelay;

uint8_t upWindCounter;
uint8_t upZonCounter;
uint8_t downWindCounter;
uint8_t downZonCounter;
uint8_t status;
};

struct SystemStatus {
uint16_t windAvg;
uint16_t wind;
uint16_t sun;
bool valueChanged;
bool day;
bool summer;
bool alarm;
struct Awning *east;
struct Awning *south;
struct Awning *west;
uint8_t desiredBacklight;

bool buttonUp;
bool buttonDown;
bool buttonPush;
uint8_t backlight;
uint8_t backlightOn;
uint8_t backlightPWMCounter;
};

# 13 "busmessage.h"
struct Address{
uint8_t address[3];
uint8_t button;
};
struct BusMessage {
uint8_t rawData[3];
};

struct BusMessage encodeAddress(struct Address *address);
struct Address decodeMessage(struct BusMessage *busMessage);

# 3 "busmessage.c"
struct Address decodeMessage(struct BusMessage *busMessage) {
struct Address address;
address.address[0] = busMessage->rawData[0] >> 2;
address.address[1] = ((busMessage->rawData[0] & 0b00000011) << 6) | (busMessage->rawData[1] >> 2);
address.address[2] = ((busMessage->rawData[1] & 0b00000011) << 6) | (busMessage->rawData[2] >> 2);

address.button = busMessage->rawData[2] & 0b00000011;
return address;
}

struct BusMessage encodeAddress(struct Address *address) {
struct BusMessage busMessage;
busMessage.rawData[0] = (address->address[0] << 2) | (address->address[1] >> 6);
busMessage.rawData[1] = (address->address[1] << 2) | (address->address[2] >> 6);
busMessage.rawData[2] = (address->address[2] << 2) | (address->button);
return busMessage;
}
